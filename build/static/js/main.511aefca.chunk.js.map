{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","handleSubmit","event","text","Axios","post","post_text","then","res","alert","data","result","preventDefault","className","onSubmit","e","name","cols","rows","onChange","target","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAyCeA,EArCH,WAAM,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAWTC,EAAe,SAACC,GARP,IAACC,IASPJ,EARPK,IAAMC,KAAK,+BAA+B,CACxCC,UAAWH,IACVI,MAAK,SAASC,GACfC,MAAMD,EAAIE,KAAKC,WAMjBT,EAAMU,kBAOR,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,6CACA,uBAAMC,SAAU,SAACC,GAAD,OAAKd,EAAac,IAAlC,UACE,gCACE,0BAAUC,KAAK,OAAOC,KAAK,KAAKC,KAAK,IAAInB,MAAOA,EAC9CoB,SAAU,SAACJ,GAVrBf,EAUsCe,EAVvBK,OAAOrB,YAYhB,uBACA,uBAAOsB,KAAK,SAAStB,MAAM,mBCtBtBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.511aefca.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css'\nimport Axios from 'axios';\n\nconst App = () =>{\n  const [value, setValue] = useState('')\n\n  const wakati = (text) => {\n    Axios.post('http://127.0.0.1:5000/wakati',{\n      post_text: text\n    }).then(function(res) {\n      alert(res.data.result);\n    })\n  };\n\n  const handleSubmit = (event) =>{\n    wakati(value)\n    event.preventDefault();\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  };\n\n  return(\n    <div className='App'>\n      <header className='App-header'>\n        <h1>text parser</h1>\n        <form onSubmit={(e)=>handleSubmit(e)}>\n          <label>\n            <textarea name='text' cols='80' rows='4' value={value}\n              onChange={(e)=>handleChange(e)}/>\n          </label>\n          <br/>\n          <input type='submit' value='Parse'/>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}